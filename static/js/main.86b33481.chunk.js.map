{"version":3,"sources":["components/Header.js","components/Footer.js","components/Contact.js","components/Experience.js","components/Education.js","utils/dateHelpers.js","components/DisplayExperience.js","components/DisplayEducation.js","components/Preview.js","components/RenderPDF.js","App.js","reportWebVitals.js","index.js"],"names":["Header","focusable","className","role","xmlns","viewBox","fill","d","Footer","href","target","rel","id","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Contact","props","htmlFor","onChange","value","state","fullName","type","placeholder","phoneNumber","email","address","portfolio","linkedIn","aboutMe","rows","cols","Experience","jobTitle","company","jobLocation","jobStartDate","jobEndDate","Education","institution","eduLocation","attainment","eduStartDate","eduEndDate","getDateStrings","dateSelected","inputDate","year","substring","month","day","formatDate","format","Date","createDateObject","DisplayExperience","map","job","index","pathname","onClick","handleModifications","width","height","points","x1","y1","x2","y2","DisplayEducation","LivePreviewExperience","LivePreviewEducation","Preview","useLocation","emailHref","contact","reg","Array","from","character","test","push","formattedPhoneNumber","toString","replaceAll","phoneHref","cx","cy","r","experience","userExperience","education","userEducation","RenderPDF","useEffect","window","print","PrintProvider","Print","App","handleContactChange","e","setState","prevState","handleExperienceChange","handleEducationChange","handleAddExperience","preventDefault","isValid","info","validateExperienceForm","concat","sort","a","b","compareDesc","uniqid","document","querySelector","textContent","handleAddEducation","validateForm","edu","selectedBtnClassNames","closest","selectedID","dataset","includes","filter","path","element","this","to","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86b33481.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return (\n    <header>\n      <svg\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        data-prefix=\"fas\"\n        data-icon=\"cubes\"\n        className=\"svg-inline--fa fa-cubes fa-w-16 header-icon\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"\n        ></path>\n      </svg>\n      <h1>CV Builder</h1>\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer>\n      <h4>Visit my GitHub</h4>\n      <a\n        href=\"https://github.com/jernestmyers\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <svg\n          id=\"github-icon\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"feather feather-github\"\n        >\n          <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\n        </svg>\n      </a>\n    </footer>\n  );\n}\n","const Contact = (props) => {\n  return (\n    <div id=\"contact-form-container\">\n      <h2>Personal Information</h2>\n      <form id=\"contact-form\">\n        <div className=\"form-field\">\n          <label htmlFor=\"fullName\">Full Name</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.fullName}\n            type=\"text\"\n            id=\"fullName\"\n            placeholder=\"Ada Lovelace\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"phoneNumber\">Phone Number</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.phoneNumber}\n            type=\"tel\"\n            id=\"phoneNumber\"\n            placeholder=\"(123) 456-7890\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.email}\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"me@email.com\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"address\">Mailing Address</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.address}\n            type=\"text\"\n            id=\"address\"\n            placeholder=\"123 Main St, Austin, TX 76543\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"portfolio\">Portfolio</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.portfolio}\n            type=\"email\"\n            id=\"portfolio\"\n            placeholder=\"github.com/awesome-work\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"linkedIn\">LinkedIn</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.linkedIn}\n            type=\"url\"\n            id=\"linkedIn\"\n            placeholder=\"linkedin.com/in/adalovelace\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label id=\"about-me-label\" htmlFor=\"aboutMe\">\n            Brief Description\n          </label>\n          <textarea\n            onChange={props.onChange}\n            value={props.state.aboutMe}\n            id=\"aboutMe\"\n            rows=\"5\"\n            cols=\"50\"\n            placeholder=\"Ada Lovelace published the first algorithm intended to be carried out by a\n                  machine. As a result, she is often regarded as the first computer programmer.\"\n          ></textarea>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Experience = (props) => {\n  return (\n    <div>\n      <h2>Work Experience</h2>\n      <form className=\"experience-form\">\n        <div className=\"form-field\">\n          <label htmlFor=\"jobTitle\">Position</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.jobTitle}\n            type=\"text\"\n            id=\"jobTitle\"\n            placeholder=\"Software Engineer\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"company\">Company</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.company}\n            type=\"text\"\n            id=\"company\"\n            placeholder=\"Best Company Ever\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"jobLocation\">Location</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.jobLocation}\n            type=\"text\"\n            id=\"jobLocation\"\n            placeholder=\"Austin, TX\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"jobStartDate\">Start Date</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.jobStartDate}\n            type=\"date\"\n            id=\"jobStartDate\"\n          />\n        </div>\n        <div className=\"form-field end-date-field\">\n          <label className=\"end-date-label\" htmlFor=\"jobEndDate\">\n            End Date<span className=\"asterik\">*</span>\n          </label>\n          <input\n            className=\"end-date-input\"\n            onChange={props.onChange}\n            value={props.state.jobEndDate}\n            type=\"date\"\n            id=\"jobEndDate\"\n          />\n          <small className=\"end-date-instructions\">\n            {\" \"}\n            * Put today's date if presently employed here.\n          </small>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\n\nconst Education = (props) => {\n  return (\n    <div>\n      <h2>Education</h2>\n      <form>\n        <div className=\"form-field\">\n          <label htmlFor=\"institution\">Institution</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.institution}\n            type=\"text\"\n            id=\"institution\"\n            placeholder=\"University of Florida\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"eduLocation\">Location</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.eduLocation}\n            type=\"text\"\n            id=\"eduLocation\"\n            placeholder=\"Gainesville, FL\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"attainment\">Attainment</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.attainment}\n            type=\"text\"\n            id=\"attainment\"\n            placeholder=\"B.S. Civil Engineering\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"eduStartDate\">Start Date</label>\n          <input\n            onChange={props.onChange}\n            value={props.state.eduStartDate}\n            type=\"date\"\n            id=\"eduStartDate\"\n          />\n        </div>\n        <div className=\"form-field end-date-field\">\n          <label className=\"end-date-label\" htmlFor=\"eduEndDate\">\n            End Date<span className=\"asterik\">*</span>\n          </label>\n          <input\n            onChange={props.onChange}\n            value={props.state.eduEndDate}\n            className=\"end-date-input\"\n            type=\"date\"\n            id=\"eduEndDate\"\n          />\n          <small className=\"end-date-instructions\">\n            {\" \"}\n            * Put today's date if presently enrolled here.\n          </small>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Education;\n","import { format } from \"date-fns\";\n\nfunction getDateStrings(dateSelected) {\n  const inputDate = dateSelected;\n  const year = +inputDate.substring(0, 4);\n  const month = +inputDate.substring(5, 7) - 1;\n  const day = +inputDate.substring(8, 10);\n  return { year, month, day };\n}\n\nexport const formatDate = (dateSelected) => {\n  if (dateSelected) {\n    const { year, month, day } = getDateStrings(dateSelected);\n    const inputDate = dateSelected;\n    const today = format(new Date(), \"yyyy-MM-dd\");\n    if (today !== inputDate) {\n      return format(new Date(year, month, day), \"MMM yyyy\");\n    } else {\n      return `Present`;\n    }\n  }\n};\n\nexport function createDateObject(dateSelected) {\n  const { year, month, day } = getDateStrings(dateSelected);\n  return new Date(year, month, day);\n}\n","import \"../styles/experience-style.css\";\nimport { formatDate } from \"../utils/dateHelpers\";\n\nconst DisplayExperience = (props) => {\n  return (\n    <div id=\"experience-static-container\">\n      {props.state.map((job, index) => {\n        return (\n          <div className=\"display-experience-container\" key={index}>\n            <div className=\"date-container\">\n              {formatDate(job.jobStartDate)} to {formatDate(job.jobEndDate)}\n            </div>\n            <div className=\"company-info-container\">\n              <p className=\"display-position\">{job.jobTitle}</p>\n              <p className=\"display-company-info\">\n                {job.company} | {job.jobLocation}\n              </p>\n            </div>\n            {props.pathname === \"/cv-project/\" ? (\n              <div className=\"btns-container\">\n                <button\n                  className=\"modify-btns edit-btn edit-experience\"\n                  data-id={job.id}\n                  onClick={props.handleModifications}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-edit-3 modify-icons\"\n                  >\n                    <path d=\"M12 20h9\"></path>\n                    <path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>\n                  </svg>\n                </button>\n                <button\n                  className=\"modify-btns del-experience\"\n                  data-id={job.id}\n                  onClick={props.handleModifications}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-trash-2 modify-icons\"\n                  >\n                    <polyline points=\"3 6 5 6 21 6\"></polyline>\n                    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n                    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n                  </svg>\n                </button>\n              </div>\n            ) : null}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DisplayExperience;\n","import \"../styles/experience-style.css\";\nimport { formatDate } from \"../utils/dateHelpers\";\n\nconst DisplayEducation = (props) => {\n  return (\n    <div id=\"education-static-container\">\n      {props.state.map((job, index) => {\n        return (\n          <div className=\"display-education-container\" key={index}>\n            <div className=\"date-container\">\n              {formatDate(job.eduStartDate)} to {formatDate(job.eduEndDate)}\n            </div>\n            <div className=\"company-info-container\">\n              <p className=\"display-institution-info\">\n                <span className=\"display-institution\">{job.institution}</span> |{\" \"}\n                {job.eduLocation}\n              </p>\n              <p>{job.attainment}</p>\n            </div>\n            {props.pathname === \"/cv-project/\" ? (\n              <div className=\"btns-container\">\n                <button\n                  className=\"modify-btns edit-btn edit-education\"\n                  data-id={job.id}\n                  onClick={props.handleModifications}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-edit-3 modify-icons\"\n                  >\n                    <path d=\"M12 20h9\"></path>\n                    <path d=\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"></path>\n                  </svg>\n                </button>\n                <button\n                  className=\"modify-btns del-education\"\n                  data-id={job.id}\n                  onClick={props.handleModifications}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-trash-2 modify-icons\"\n                  >\n                    <polyline points=\"3 6 5 6 21 6\"></polyline>\n                    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n                    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n                  </svg>\n                </button>\n              </div>\n            ) : null}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DisplayEducation;\n","import \"../styles/contact-style.css\";\nimport DisplayExperience from \"./DisplayExperience\";\nimport DisplayEducation from \"./DisplayEducation\";\nimport { formatDate } from \"../utils/dateHelpers\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Preview = (props) => {\n  const pathname = useLocation().pathname;\n  const emailHref = `mailto:${props.contact.email}`;\n\n  // formats phone number for use as href\n  const reg = /^\\d+$/;\n  const phoneNumber = [];\n  // eslint-disable-next-line\n  Array.from(props.contact.phoneNumber).map((character) => {\n    if (reg.test(character)) {\n      phoneNumber.push(character);\n    }\n  });\n  const formattedPhoneNumber = phoneNumber.toString().replaceAll(`,`, ``);\n  const phoneHref = `tel:${formattedPhoneNumber}`;\n\n  return (\n    <div>\n      <div id=\"contact-preview-container\">\n        <p id=\"display-name\">{props.contact.fullName}</p>\n        <p id=\"display-number\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-phone contact-icons\"\n          >\n            <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>\n          </svg>\n          <a href={phoneHref}>{props.contact.phoneNumber}</a>\n        </p>\n        <p id=\"display-address\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-map-pin contact-icons\"\n          >\n            <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\n            <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\n          </svg>\n          {props.contact.address}\n        </p>\n        <p id=\"display-email\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-mail contact-icons\"\n          >\n            <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\n            <polyline points=\"22,6 12,13 2,6\"></polyline>\n          </svg>\n          <a href={emailHref}>{props.contact.email}</a>\n        </p>\n        <p id=\"display-portfolio\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-link contact-icons\"\n          >\n            <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n            <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n          </svg>\n          <a href={props.contact.portfolio} rel=\"noreferrer\" target=\"_blank\">\n            {props.contact.portfolio}\n          </a>\n        </p>\n        <p id=\"display-linkedIn\">\n          <svg\n            className=\"contact-icons\"\n            role=\"img\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <title>LinkedIn</title>\n            <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\n          </svg>\n          <a href={props.contact.linkedIn} rel=\"noreferrer\" target=\"_blank\">\n            {props.contact.linkedIn}\n          </a>\n        </p>\n        <div id=\"display-aboutMe-container\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-info contact-icons\"\n          >\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n            <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n            <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n          </svg>\n          <p id=\"display-aboutMe\">{props.contact.aboutMe}</p>\n        </div>\n      </div>\n      <div id=\"experience-preview-container\">\n        <h3 id=\"experience-header\">Professional Experience</h3>\n        <LivePreviewExperience state={props.experience}></LivePreviewExperience>\n        <DisplayExperience\n          state={props.userExperience}\n          pathname={pathname}\n          handleModifications={props.handleModifications}\n        />\n      </div>\n      <div id=\"edu-preview-container\">\n        <h3 id=\"edu-header\">Education</h3>\n        <LivePreviewEducation state={props.education}></LivePreviewEducation>\n        <DisplayEducation\n          state={props.userEducation}\n          pathname={pathname}\n          handleModifications={props.handleModifications}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst LivePreviewExperience = (props) => {\n  if (\n    props.state.jobTitle ||\n    props.state.company ||\n    props.state.jobLocation ||\n    props.state.jobStartDate ||\n    props.state.jobEndDate\n  ) {\n    return (\n      <div className=\"display-experience-container\">\n        <div className=\"date-container\">\n          {formatDate(props.state.jobStartDate)} to{\" \"}\n          {formatDate(props.state.jobEndDate)}\n        </div>\n        <div className=\"company-info-container\">\n          <p className=\"display-position\">{props.state.jobTitle}</p>\n          <p className=\"display-company-info\">\n            {props.state.company} | {props.state.jobLocation}\n          </p>\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nconst LivePreviewEducation = (props) => {\n  if (\n    props.state.eduLocation ||\n    props.state.eduStartDate ||\n    props.state.eduEndDate ||\n    props.state.institution ||\n    props.state.attainment\n  ) {\n    return (\n      <div className=\"display-education-container\">\n        <div className=\"date-container\">\n          {formatDate(props.state.eduStartDate)} to{\" \"}\n          {formatDate(props.state.eduEndDate)}\n        </div>\n        <div>\n          <p className=\"display-institution-info\">\n            <span className=\"display-institution\">\n              {props.state.institution}\n            </span>{\" \"}\n            | {props.state.eduLocation}\n          </p>\n          <p>{props.state.attainment}</p>\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default Preview;\n","import React, { useEffect } from \"react\";\nimport Preview from \"./Preview\";\nimport PrintProvider, { Print } from \"react-easy-print\";\n\nconst RenderPDF = (props) => {\n  useEffect(() => {\n    window.print();\n  }, []);\n\n  return (\n    <PrintProvider>\n      <Print>\n        <Preview\n          contact={props.contact}\n          experience={props.experience}\n          education={props.education}\n          userExperience={props.userExperience}\n          userEducation={props.userEducation}\n          handleModifications={props.handleModifications}\n        />\n      </Print>\n    </PrintProvider>\n  );\n};\n\nexport { RenderPDF };\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Contact from \"./components/Contact\";\nimport Experience from \"./components/Experience\";\nimport Education from \"./components/Education\";\nimport Preview from \"./components/Preview\";\nimport { RenderPDF } from \"./components/RenderPDF\";\nimport React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\nimport { compareDesc } from \"date-fns\";\nimport { createDateObject } from \"./utils/dateHelpers\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contact: {\n        fullName: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n        email: \"\",\n        portfolio: \"\",\n        linkedIn: \"\",\n        aboutMe: \"\",\n      },\n      experience: {\n        id: uniqid(),\n        jobTitle: \"\",\n        company: \"\",\n        jobLocation: \"\",\n        jobStartDate: \"\",\n        jobEndDate: \"\",\n      },\n      userExperience: [],\n      education: {\n        id: uniqid(),\n        institution: \"\",\n        eduLocation: \"\",\n        attainment: \"\",\n        eduStartDate: \"\",\n        eduEndDate: \"\",\n      },\n      userEducation: [],\n    };\n  }\n\n  handleContactChange = (e) => {\n    this.setState((prevState) => ({\n      contact: {\n        ...prevState.contact,\n        [`${e.target.id}`]: e.target.value,\n      },\n    }));\n  };\n\n  handleExperienceChange = (e) => {\n    this.setState((prevState) => ({\n      experience: {\n        ...prevState.experience,\n        [`${e.target.id}`]: e.target.value,\n      },\n    }));\n  };\n\n  handleEducationChange = (e) => {\n    this.setState((prevState) => ({\n      education: {\n        ...prevState.education,\n        [`${e.target.id}`]: e.target.value,\n      },\n    }));\n  };\n\n  handleAddExperience = (e) => {\n    e.preventDefault();\n    let isValid = true;\n    const validateExperienceForm = () => {\n      for (const info in this.state.experience) {\n        if (!this.state.experience[info]) {\n          isValid = false;\n        }\n      }\n    };\n    validateExperienceForm();\n\n    if (isValid) {\n      this.setState({\n        userExperience: this.state.userExperience\n          .concat(this.state.experience)\n          .map((job) => {\n            return job;\n          })\n          .sort((a, b) => {\n            return compareDesc(\n              createDateObject(a.jobEndDate),\n              createDateObject(b.jobEndDate)\n            );\n          }),\n      });\n\n      this.setState({\n        experience: {\n          id: uniqid(),\n          jobTitle: \"\",\n          company: \"\",\n          jobLocation: \"\",\n          jobStartDate: \"\",\n          jobEndDate: \"\",\n        },\n      });\n      document.querySelector(`#add-exp-btn`).textContent = `Add Experience`;\n    }\n  };\n\n  handleAddEducation = (e) => {\n    e.preventDefault();\n    let isValid = true;\n    const validateForm = () => {\n      for (const info in this.state.education) {\n        if (!this.state.education[info]) {\n          isValid = false;\n        }\n      }\n    };\n    validateForm();\n    if (isValid) {\n      this.setState({\n        userEducation: this.state.userEducation\n          .concat(this.state.education)\n          .map((edu) => {\n            return edu;\n          })\n          .sort((a, b) => {\n            return compareDesc(\n              createDateObject(a.eduEndDate),\n              createDateObject(b.eduEndDate)\n            );\n          }),\n      });\n\n      this.setState({\n        education: {\n          id: uniqid(),\n          institution: \"\",\n          eduLocation: \"\",\n          attainment: \"\",\n          eduStartDate: \"\",\n          eduEndDate: \"\",\n        },\n      });\n      document.querySelector(`#add-edu-btn`).textContent = `Add Education`;\n    }\n  };\n\n  handleModifications = (e) => {\n    e.preventDefault();\n    const selectedBtnClassNames = e.target.closest(`button`).className;\n    const selectedID = e.target.closest(`button`).dataset.id;\n    // handles editing and deleting experience objects in CV\n    if (selectedBtnClassNames.includes(`experience`)) {\n      if (selectedBtnClassNames.includes(`edit`)) {\n        document.querySelector(`#add-exp-btn`).textContent = `Confirm Edits`;\n        // eslint-disable-next-line\n        this.state.userExperience.map((job) => {\n          if (job.id === selectedID) {\n            this.setState({\n              experience: {\n                id: job.id,\n                jobTitle: job.jobTitle,\n                company: job.company,\n                jobLocation: job.jobLocation,\n                jobStartDate: job.jobStartDate,\n                jobEndDate: job.jobEndDate,\n              },\n            });\n          }\n        });\n      }\n      this.setState({\n        // eslint-disable-next-line\n        userExperience: this.state.userExperience.filter(\n          (job) => job.id !== selectedID\n        ),\n      });\n    }\n    // handles editing and deleting education objects in CV\n    if (selectedBtnClassNames.includes(`education`)) {\n      if (selectedBtnClassNames.includes(`edit`)) {\n        document.querySelector(`#add-edu-btn`).textContent = `Confirm Edits`;\n        // eslint-disable-next-line\n        this.state.userEducation.map((edu) => {\n          if (edu.id === selectedID) {\n            this.setState({\n              education: {\n                id: edu.id,\n                institution: edu.institution,\n                eduLocation: edu.eduLocation,\n                attainment: edu.attainment,\n                eduStartDate: edu.eduStartDate,\n                eduEndDate: edu.eduEndDate,\n              },\n            });\n          }\n        });\n      }\n      this.setState({\n        // eslint-disable-next-line\n        userEducation: this.state.userEducation.filter(\n          (edu) => edu.id !== selectedID\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <Routes>\n          <Route\n            path=\"/cv-project\"\n            element={\n              <>\n                <Header />\n                <div className=\"mainDisplay\">\n                  <div className=\"inputFields\">\n                    <Contact\n                      state={this.state.contact}\n                      onChange={this.handleContactChange}\n                    />\n                    <div id=\"experience-container\">\n                      <Experience\n                        state={this.state.experience}\n                        onChange={this.handleExperienceChange}\n                      />\n                      <button\n                        id=\"add-exp-btn\"\n                        onClick={this.handleAddExperience}\n                      >\n                        Add Experience\n                      </button>\n                    </div>\n                    <div>\n                      <Education\n                        state={this.state.education}\n                        onChange={this.handleEducationChange}\n                      />\n                      <button\n                        id=\"add-edu-btn\"\n                        onClick={this.handleAddEducation}\n                      >\n                        Add Education\n                      </button>\n                    </div>\n                  </div>\n                  <div>\n                    <h2>Live Preview</h2>\n                    <div className=\"previewOfCV\">\n                      <Preview\n                        contact={this.state.contact}\n                        experience={this.state.experience}\n                        education={this.state.education}\n                        userExperience={this.state.userExperience}\n                        userEducation={this.state.userEducation}\n                        handleModifications={this.handleModifications}\n                      />\n                      <Link to=\"/cv-project/pdf\">\n                        <button>Generate PDF</button>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n                <Footer />\n              </>\n            }\n          ></Route>\n          <Route\n            path=\"/cv-project/pdf\"\n            element={\n              <RenderPDF\n                contact={this.state.contact}\n                experience={this.state.experience}\n                education={this.state.education}\n                userExperience={this.state.userExperience}\n                userEducation={this.state.userEducation}\n                handleModifications={this.handleModifications}\n              ></RenderPDF>\n            }\n          ></Route>\n        </Routes>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}